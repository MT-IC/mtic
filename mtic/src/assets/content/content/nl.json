{
    "captions": {
        "home": "Home",
        "resume": "CV",
        "experience": "Werkervaringen",
        "search": "<span class=\"fa fa-search\"></span><abbr> Zoeken</abbr>",
        "previous-article-button-text": "Vorige",
        "next-article-button-text": "Volgende"
    },
    "articles": [
        {
            "id": "welkom",
            "title": "Welkom",
            "content": [
                "<p class=\"align-center\"><img width=\"158\" src=\"/assets/content/images/marcel-small.jpg\"/></p>",
                "Ik ben een gedreven freelance software ontwikkelaar uit Apeldoorn (Gelderland) met ruime ervaring in vele disciplines. Zowel zelfstandig als in teamverband maak ik een verschil door nauwkeurig en gestructureerd te werken, maar ook buiten de gebaande paden te denken, kritisch te zijn ten aanzien van werkwijzen en procedures en oplossingen voor te stellen die efficiënt en schaalbaar zijn. Mijn houding is klantgericht en collegiaal.",
                "Op deze website en op LinkedIn zal ik aangeven wanneer ik beschikbaar ben voor een opdracht. Indien u op de hoogte gesteld wilt worden zodra ik beschikbaar ben of u wilt informeren naar mijn beschikbaarheid voor een opdracht, stuurt u mij daarover dan een e-mail.",
                "Met vriendelijke groeten,",
                "Marcel Timmerman<br/>[info@marceltimmerman.nl](mailto:info@marceltimmerman.nl)<br/>[+31 (0) 6 250 67 250](tel://+31625067250)<br/>Registratie Handelsregister: 54227593 KvK Oost Nederland",
                "<p class=\"align-right\"><a href=\"http://nl.linkedin.com/in/marceltimmerman\" target=\"blank\"><img src=\"/assets/content/images/btn_liprofile_blue_80x15.png\"></a></p>"
            ],
            "settings": {
                "showTitle": false,
                "categoryIndexes": {
                    "home": 1
                }
            }
        },
        {
            "id": "beschikbaar",
            "title": "Beschikbaar per 1 september 2020",
            "content": [""],
            "settings": {
                "hidden": true,
                "categoryIndexes": {
                    "home": 0
                }
            }
        },
        {
            "id": "curriculum-vitae",
            "title": "Curriculum Vitae",
            "class": "tables-without-headers",
            "tags": [],
            "content": [
                "## Inleiding",
                "Ik ben in 1997 afgestudeerd in de industriële automatisering en ben daar de eerste jaren na mijn afstuderen ook in werkzaam geweest. Al snel werd ik aangetrokken door de uitdaging van de kantoor automatisering en begon ik te werken aan de integratie van industriële processen in de administratieve. Door teruglopende behoefte aan efficiëntie verbetering op dat vlak kwam dit niet goed van de grond en ben ik in 2002 volledig in de kantoor automatisering gegaan. De eerste jaren heb ik voornamelijk geprogrammeerd in VB6 en VB.NET (dotnet), daarna in Delphi 7 en C#.NET (dotnet), maar ook in andere talen zoals hieronder te zien is.",
                "",
                "## Personalia",
                "| &nbsp | &nbsp; |",
                "| --- | --- |",
                "| Naam | M.K. Timmerman (Marcel) |",
                "| Geboortedatum | 15 september 1974 |",
                "| Nationaliteit | Nederlandse |",
                "| Vooropleidingen | MAVO, MTS |",
                "| Vervolgopleidingen | HTS |",
                "| Afstudeerrichting | Industri&euml;le automatisering |",
                "| Talen | Nederlands (moedertaal) |",
                "| | Engels (gevorderd) |",
                "",
                "## Vaardigheden",
                "(<i class=\"junior\"></i>=junior, <i class=\"medior\"></i>=medior, <i class=\"senior\"></i>=senior)",
                "",
                "### Programmeertalen",
                "C#.NET <i class=\"senior\"></i><br/>",
                "Regular Expressions <i class=\"senior\"></i><br/>",
                "HTML, CSS, SASS <i class=\"senior\"></i><br/>",
                "XML, XSD, XSLT, XPath <i class=\"senior\"></i><br/>",
                "JavaScript / TypeScript <i class=\"medior\"></i><br/>",
                "SQL <i class=\"senior\"></i><br/>",
                "### Methoden",
                "Agile, Scrum <i class=\"senior\"></i><br/>",
                "Object Oriented <i class=\"senior\"></i><br/>",
                "SOA <i class=\"senior\"></i><br/>",
                "### Technieken/platforms",
                "Microsoft Azure <i class=\"medior\"></i><br/>",
                "EntityFramework <i class=\"senior\"></i><br/>",
                "Linq / LinqToSql / LinqToEntities <i class=\"senior\"></i><br/>",
                "Angular / NGRX <i class=\"medior\"></i><br/>",
                "ASP.NET <i class=\"senior\"></i><br/>",
                "MVC <i class=\"senior\"></i><br/>",
                "Ajax <i class=\"senior\"></i><br/>",
                "Specflow (Gherkin) <i class=\"medior\"></i><br/>",
                "### Database",
                "SQL Server <i class=\"senior\"></i><br/>",
                "### Tools",
                "Visual Studio / Visual Studio Code <i class=\"senior\"></i><br/>",
                "Git / Bitbucket / SVN <i class=\"senior\"></i><br/>",
                "TeamCity / Octopus <i class=\"senior\"></i><br/>",
                "Atlassian Jira <i class=\"medior\"></i><br/>",
                "Azure DevOps <i class=\"senior\"></i><br/>",
                "Microsoft Office (Word, Excel, Access) <i class=\"senior\"></i><br/>",
                "",
                "## Persoonlijk/vrije tijd",
                "Ik ben getrouwd en heb twee kinderen. Ik ben niet actief op social media maar doe mijn best om Jezus te volgen en ga elke zondag naar de kerk, waarvoor ik ook vrijwilligerswerk doe. Ik speel volleybal op recreatief niveau. Verder klus ik graag rondom het huis en geniet van de buitenlucht en de natuur."
            ]
        },
        {
            "id": "werkervaringen",
            "title": "Werk-/Opdrachtgevers",
            "class": "tables-without-headers",
            "content": [
                "| &nbsp; | &nbsp; |",
                "| --- | --- |",
                "| jul<abbr>i</abbr> 2020 - heden | Asito |",
                "| jan<abbr>uari</abbr> 2019 - jun<abbr>i</abbr> 2020 | AgroVision B.V. |",
                "| okt<abbr>ober</abbr> 2017 - jan<abbr>uari</abbr> 2019 | CCV |",
                "| apr<abbr>il</abbr> 2016 - sep<abbr>tember</abbr> 2017 | TUI |",
                "| apr<abbr>il</abbr> 2015 - m<abbr>aa</abbr>rt 2016 | BWaste International BV |",
                "| okt<abbr>ober</abbr> 2014 - m<abbr>aa</abbr>rt 2015 | WIZIN |",
                "| m<abbr>aa</abbr>rt 2013 - m<abbr>aa</abbr>rt 2015 | Asito |",
                "| sep<abbr>tember</abbr> 2012 - feb<abbr>ruari</abbr> 2013 | De Expiratiedesk |",
                "| mei 2012 - aug<abbr>ustus</abbr> 2012 | Independer.nl |",
                "| jan<abbr>uari</abbr> 2012 - apr<abbr>il</abbr> 2012 | Europ Assistance (ZZP) |",
                "| sep<abbr>tember</abbr> 2008 - dec<abbr>ember</abbr> 2011 | Europ Assistance |",
                "| m<abbr>aa</abbr>rt 2005 - aug<abbr>ustus</abbr> 2008 | Ascalon BV |",
                "| apr<abbr>il</abbr> 2002 - feb<abbr>ruari</abbr> 2005 | Centric IT Solutions |",
                "| apr<abbr>il</abbr> 2001 - m<abbr>aa</abbr>rt 2002 | ICT |",
                "| feb<abbr>ruari</abbr> 1998 - m<abbr>aa</abbr>rt 2001 | Hollander BV |"
            ],
            "settings": {
                "browsable": false,
                "categoryIndexes": {
                    "experience": 1
                }
            }
        },
        {
            "id": "uitbreiding-van-data-uitwisseling-systeem",
            "title": "Uitbreiding van data uitwisseling systeem",
            "tags": [".NET","SQL Server","MVC","EntityFrameworkCore","Scrum"],
            "content": [
                "December 2019 tot juni 2020 - Het uitbreiden van een data uitwisseling systeem en het bouwen van een adapter voor een specifieke externe API.",
                "--readmore--",
                "Tags:<br/>",
                ".NET - SQL Server - MVC - EntityFrameworkCore - Scrum",
                "## Situatie",
                "Het data uitwisseling systeem wordt dagelijks gevoed met imports vanuit verschillende systemen met fok administraties van varkenshouders. De verschillen tussen de import en de in de database aanwezige data worden bepaald en opgeslagen, waarbij ook historie bewaard blijft. Het systeem stelt een API beschikbaar voor externe partijen, en er is een adapter gebouwd om dagelijks wijzigingen naar een specifieke fok organisatie te sturen. Er is behoefte om een tweede adapter te bouwen, voor een andere fok organisatie. Aangezien deze organisatie aanzienlijk meer informatie nodig heeft, moeten er ook uitbreidingen komen op het datamodel, de verwerking van de imports en het aanmaken van de exports.",
                "## Taken",
                "Het ontwerp en de bouw van de nieuwe adapter, waarbij de meeste tijd is besteed aan het bouwen van de communicatie. De API waarmee gecommuniceerd moet worden is oorspronkelijk gebouwd als backend voor een data invoer web applicatie waarin gezocht kan worden, een gevonden record kan worden bewerkt dat vervolgens kan worden opgeslagen of waarop de wijzigingen kunnen worden teruggedraaid. Ook invoer en verwijderen werken op soortgelijke wijze. Daarbij komt dat er met allerlei validaties rekening gehouden moet worden, en dat de volgorde van het aanbrengen van de wijzigingen zeer belangrijk is. Dit leidt tot een intensief communicatieproces dat bovendien zeer moeilijk te testen was. Naast deze communicatie moeten er tevens web portalen worden gebouwd voor gebruik door de support organisatie en door de gebruikers zelf, voor het instellen van rechten, en instellen van bepaalde mappings en het monitoren van de communicatie.",
                "Tijdens dit project ben ik scrum-master geweest.",
                "## Aanpak",
                "We zijn begonnen met het implementeren van een client voor de API, waarbij een specifieke serialisatie methode is gebouwd. Daarna zijn entiteiten toegevoegd of uitgebreid in de database en de ex- en import. Tegelijk zijn generieke classes gebouwd om de communicatie uit te voeren in de correcte volgorde. Omdat de test mogelijkheden op de werkelijke API beperkt waren, is er ook veel tijd gestoken in integratietests waarin zo veel mogelijk scenarios getest werden. In deze tests werden alleen de EntityFramework context en de API communicatie gemocked. Zodoende kon niet alleen de logica worden getest, ook kon zodoende duidelijk worden gemaakt hoe e.e.a. behoort te werken. Ook zijn de benodigde portalen gebouwd.",
                "## Resultaat",
                "De werkzaamheden zijn met succes afgerond zodat de administraties in de backends synchroon gehouden kunnen worden met de administratie van de fok organisatie."
            ],
            "settings": {
                "nextButtonText": "Ouder",
                "previousButtonText": "Nieuwer",
                "categoryIndexes": {
                    "experience": 2
                }
            }
        },
        {
            "id": "app-voor-varkenshouderij",
            "title": "App voor varkenshouderij",
            "tags": [".NET","Xamarin","Android","iOS","MVC","Web API","RabbitMQ","TFS","CI/CD","Scrum"],
            "content": [
                "Januari 2019 tot november 2019 - Doorontwikkelen van een app en bijbehorende API.",
                "--readmore--",
                "Tags:<br/>",
                ".NET - Xamarin - Android - iOS - MVC - Web API - RabbitMQ - TFS - CI/CD - Scrum",
                "## Situatie",
                "Wanneer ik aanschuif in dit project staat er al een basis voor de app en de API. De app moet worden uitgebreid zodat zo veel mogelijk van de handelingen, die varkenshouders in de stal moeten doen, via de app gedaan kunnen worden. De API communiceert via RabbitMQ met vier verschillende backend applicaties, waaronder ook instanties die bij klanten thuis geïnstalleerd zijn.",
                "## Taken",
                "De werkzaamheden omvatten het uitbreiden van de functionaliteiten van de app en de API, waaronder ook communicatie met externe RFID lezers. Ook hebben we grote stappen gemaakt in het verbeteren van de software kwaliteit en het verbeteren van het gebruik van RabbitMQ, omdat dit aanvankelijk verkeerd opgezet was. Hierdoor kon de doorstroom van het dataverkeer niet gedoseerd worden (throttling) wat regelmatig tot problemen leidde.",
                "## Aanpak",
                "Doorgaans werd het werk georganiseerd middels scrum in Microsoft TFS (Azure DevOps). Specifiek heb ik me bezig gehouden met een grote aanpassing in de manier waarop RabbitMQ werd gebruikt. Om de noodzaak van deze wijziging uit te leggen heb ik presentaties gehouden voor het team en de mensen die hierover moesten beslissen, en ik heb het uiteindelijk uitgevoerd.",
                "De software voor de app werd herschreven in een generieke manier, om schermen en gedrag zo veel mogelijk te standaardiseren.",
                "## Resultaat",
                "De stabiliteit, kwaliteit en functionaliteit van de software zijn enorm toegenomen in de periode waarin we eraan gewerkt hebben. Na mijn bijdrage zijn teams opnieuw ingedeeld en ging een ander team hieraan verder werken."            ],
            "settings": {
                "nextButtonText": "Ouder",
                "previousButtonText": "Nieuwer",
                "categoryIndexes": {
                    "experience": 3
                }
            }
        },
        {
            "id": "software-voor-betaalterminals",
            "title": "Software voor betaalterminals",
            "tags": ["C#.NET","Mono","Dependency Injection","Remoting","AngularJS","Web API","Test automation","Specflow"],
            "content": [
                "Oktober 2017 tot januari 2019 - Doorontwikkelen van software voor betaalterminals. ",
                "--readmore--",
                "Tags:<br/>",
                "C#.NET - Mono - Dependency Injection - Remoting - AngularJS - Web API - Test automation - Specflow",
                "## Situatie",
                "Er is al enige jaren gewerkt aan een modulaire .NET applicatie voor betaalterminals als ik het team kom versterken. De software communiceert op verschillende vlakken met andere systemen (secure onderlaag, kassasysteem, configuratie service, betalingsautorisatie services, etc) en bevat bovendien diverse interfaces die het mogelijk maken geautomatiseerd “on target” te kunnen testen. Wanneer ik aan het team wordt toegevoegd is men net begonnen met een langdurige certificering waarbij nauwgezet de complexe communicatie met de betaalkaarten en de betalingsautorisatie services wordt getest.",
                "## Taken",
                "Mijn werkzaamheden omvatten gedurende de eerste maanden vooral het analyseren van problemen die werden aangetroffen tijdens de certificering, en het oplossen daarvan voor zover de oplossing in ons domein lag. Door allerlei oorzaken is dit een zeer lang traject geworden. Na verloop van tijd kwamen daar ook andere taken bij, zoals werken aan de geïntegreerde web applicatie, verschillende interfaces, unit-, integratie- en robottests en allerlei overige taken die door requirements of “legacy” aan de orde komen, zoals nieuwe functionaliteiten of refactoring.",
                "## Aanpak",
                "Door de grote complexiteit van het systeem en de materie, en de veelheid aan benodigde kennis blijft het voor een nieuwe ontwikkelaar lang lastig om de weg in de code en de omgeving te vinden. Binnen het team werd dat goed opgelost door veel samen te werken. ",
                "## Resultaat",
                "Wanneer ik het project verlaat is de certificering succesvol afgerond en is er veel werk verzet op het gebied van functionele en technische correcties en toevoegingen."            ],
            "settings": {
                "nextButtonText": "Ouder",
                "previousButtonText": "Nieuwer",
                "categoryIndexes": {
                    "experience": 4
                }
            }
        },
        {
            "id": "dynamisch-data-integratie-platform",
            "title": "Dynamisch data integratie platform",
            "tags": ["C#.NET","SQL Server","Code First EntityFramework","WCF","Dependency Injection","Expression trees","Service Oriented Architecture"],
            "content": [
                "Februari 2017 tot september 2017 - Het vervangen van een statische data integratie applicatie door een platform waarin data integratie plaatsvindt deels op basis van overeenkomsten in veranderlijke datamodellen en deels op basis van configuratie.",
                "--readmore--",
                "Tags:<br/>",
                "C#.NET - SQL Server - Code First EntityFramework - WCF - Dependency Injection - Expression trees - Service Oriented Architecture",
                "## Situatie",
                "De opdrachtgever heeft een systeem dat interesse van klanten voor producten, naar aanleiding van klikgedrag op de website, combineert met informatie over beschikbare voorraad en product informatie zoals beschrijvingen en afbeeldingen zodat dit kan worden aangeboden aan een e-mail marketing applicatie. Dit wordt een campagne genoemd. In de applicatie zijn zo’n zeven campagnes geprogrammeerd. Een nieuwe klant verlangt veel meer diversiteit en dynamiek in campagnes en kan dus niet voor elke wijziging maanden wachten totdat ontwikkelteams dit hebben gerealiseerd.",
                "## Taken",
                "Het ontwerpen en ontwikkelen van een nieuw systeem dat zo veel mogelijk functionaliteit automatisch verricht op basis van aangeboden data structuur en verder door gebruikers te configureren is. Bovendien zijn de eisen op performance gebied aanzienlijk omdat het aantal te verwerken records voor de nieuwe klant zo’n vijf maal hoger ligt dan wat er door het bestaande systeem werd verwerkt.",
                "## Aanpak",
                "Voor elk van de functionele gebieden (selectie van aanbiedingen uit voorraad, verrijken met artikel informatie, lezen van externe informatie, berekenen van afgeleide informatie en validatie) heb ik WCF services ontwikkeld die zowel als service als direct benaderbaar zijn om onnodige serialisatie door WCF te voorkomen. Deze services bevatten veelal een initialisatie fase waarin de uit te voeren handelingen worden vastgesteld, voorbereid en geoptimaliseerd, zodat de bewerkingen in de uitvoerende fase zo snel mogelijk verlopen. Veel functionaliteit is gebaseerd op gestandaardiseerde kolomnamen. Een configuratie portal maakt het mogelijk om expliciete instellingen te doen.",
                "## Resultaat",
                "Bij het schrijven van deze tekst bevindt het systeem zich in de test fase. De resultaten zijn zeer veelbelovend. Het systeem wordt gebruikt als een set gereedschappen die naar behoefte worden ingezet. Wijzigingen in bestaande campagnes zijn eenvoudig door de gebruikers zelf te realiseren."            ],
            "settings": {
                "nextButtonText": "Ouder",
                "previousButtonText": "Nieuwer",
                "categoryIndexes": {
                    "experience": 5
                }
            }
        },
        {
            "id": "verwerkingssysteem-voor-datastromen",
            "title": "Verwerkingssysteem voor datastromen",
            "tags": ["C#.NET","SQL Server","XML","Generic Classes","Dependency Injection","Automapper","Data optimaal programmeren"],
            "content": [
                "April 2016 tot januari 2017 - Het bouwen van een vervanging voor een bestaand dataverwerkingssysteem dat gebouwd was in Integration Services van Microsoft SQL Server. Het systeem moet grote hoeveelheden data kunnen verwerken van platte tabellen naar een stervormig datamodel ten behoeve van marketing en rapportage.",
                "--readmore--",
                "Tags:<br/>",
                "C#.NET - SQL Server - XML - Generic Classes - Dependency Injection - Automapper - Data optimaal programmeren",
                "## Situatie",
                "De opdrachtgever heeft een systeem geërfd dat gebouwd is in bovengenoemd systeem dat dagelijks grote hoeveelheden data verwerkt dat aangeleverd wordt in databases of XML bestanden. Het platform waarop gebouwd is maakt het onmogelijk om de kwaliteit van de code te verhogen op het gebied van testbaarheid en herbruikbaarheid (DRY). Kleine wijzigingen in het systeem leiden dikwijls tot fouten doordat dezelfde data structuren veelvoudig in het systeem voorkomen zonder gerelateerd te zijn of te kunnen zijn.",
                "## Taken",
                "Het bouwen van een systeem in C#.NET dat vergelijkbaar is met het oude systeem voor wat betreft overzichtelijkheid in control- en dataflows. Verder moet het systeem eenvoudig aanpasbaar en uitbreidbaar zijn zodat bijvoorbeeld, wanneer er een kolom wordt gewijzigd of toegevoegd, de ontwikkelaar vanzelf wordt gewezen op de plaatsen waar een aanpassing moet worden doorgevoerd. Verder moet de snelheid van het systeem vergelijkbaar of beter zijn dan het oude. Het systeem moet zo veel mogelijk worden voorzien van unit tests.",
                "## Aanpak",
                "Eerst heb ik een aantal componenten gebouwd die soortgelijke taken uitvoeren als de meest gangbare componenten in Integration Services, zoals data bronnen en bestemmingen, lookup, split en merge. Deze classes zijn allemaal generic zodat er altijd strong-typed gewerkt kan worden. Vervolgens heb ik een gelaagd systeem gebouwd waarbij de data wordt gemapt middels interfaces en Automapper. De database toegang wordt middels Dependency Injection gekoppeld zodat voor de tests niet altijd databases nodig zijn. Door middel van tests op de Automapper configuratie wordt gevalideerd of alle velden van bron en doel zijn opgenomen in het systeem.",
                "## Resultaat",
                "Het systeem dat nu draait werkt beter dan het oude omdat het in staat is met grotere hoeveelheden data te werken. De code is goed en volledig testbaar zonder het product eerst te hoeven installeren of afhankelijk te zijn van de inhoud van een database. Dit is een grote verbetering omdat de tests zo altijd dezelfde uitkomst hebben. Het aanbrengen van wijzigingen in het systeem gaat sneller en het resultaat is nu goed te valideren."            ],
            "settings": {
                "nextButtonText": "Ouder",
                "previousButtonText": "Nieuwer",
                "categoryIndexes": {
                    "experience": 6
                }
            }
        },
        {
            "id": "communicatiesysteem-veldapparatuur",
            "title": "Communicatiesysteem veldapparatuur",
            "tags": ["C#.NET","Multithreading","Binaire communicatie","Dependency Injection","MQTT","IoT"],
            "content": [
                "December 2015 tot maart 2016 - Het bouwen van een server systeem voor het communiceren met eenvoudige apparatuur over GSM en GPRS verbindingen. Het systeem moet allerlei verbindingen en protocollen kunnen ontvangen en verwerken in een operationele database.",
                "--readmore--",
                "Tags:<br/>",
                "C#.NET - Multithreading - Binaire communicatie - Dependency Injection - MQTT - IoT",
                "## Situatie",
                "De opdrachtgever heeft verschillende meet- en toegangscontrolesystemen voor ondergrondse afvalcontainers. Deze systemen hebben allemaal hun eigen fabrikant specifieke server systemen en protocollen voor het ontvangen van verbindingen en het uitwisselen van data. Bij het bouwen van deze software is destijds besloten rechtstreeks in de productiedatabase te lezen en schrijven. Nu het aantal veldapparaten groeit komt de performance van de database in het geding. Bovendien het is beheer van de systemen lastig.",
                "## Taken",
                "Het bouwen van een nieuwe communicatie service die betrouwbaar en schaalbaar is en de productie database ontlast. Het moet mogelijk zijn om extern uitbreidingen te laten ontwikkelen.",
                "## Aanpak",
                "Het doel was om een systeem op te zetten dat op basis van plugins uitbreidbaar zou zijn, waarbij de plugins geen kennis hebben van de database structuur of de werkwijze van het systeem. Daarom heb ik een bibliotheek ontwikkeld met base classes voor plugins voor het ontvangen en verwerken van communicatie sessies. Deze plugins bouwen tijdens een sessie data op waarvoor ik een model heb gemaakt. Door middel van unit-tests kunnen deze plugins worden getest en ontwikkeld, zonder kennis van het systeem of aanwezigheid van een database, eventueel door derden. De service zelf beheert de afhandeling van de plugins en de snelheid waarmee sessies worden verwerkt in de operationele database. Zodoende kan de belasting van de database gedoseerd worden.",
                "## Resultaat",
                "Op dit moment werkt de service met verschillende plugins voor verschillende leveranciers, die verschillende protocollen afhandelen - onder meer MQTT. Omdat de benodigde gegevens zijn klaargezet in een afzonderlijke database, en de sessies gedoseerd naar de operationele database worden verwerkt, is de belasting op de operationele database niet langer merkbaar."            ],
            "settings": {
                "nextButtonText": "Ouder",
                "previousButtonText": "Nieuwer",
                "categoryIndexes": {
                    "experience": 7
                }
            }
        },
        {
            "id": "uitbreiding-registratie-systeem",
            "title": "Uitbreiding registratie systeem",
            "tags": ["C#.NET","Ember","JavaScript","OpenStreetMaps","Leaflet","ServiceStack","SQL Server"],
            "content": [
                "April 2015 tot november 2015 - Het uitbreiden van een online registratie systeem voor ondergrondse afvalcontainers en afvalpassen met een forecast module en rittenplanning voor de leging van de containers. Het portaal is gebouwd met het Ember JavaScript platform met en de server werkt met ServiceStack en SQL server.",
                "--readmore--",
                "Tags:<br/>",
                "C#.NET - Ember - JavaScript - OpenStreetMaps - Leaflet - ServiceStack - SQL Server",
                "## Situatie",
                "De opdrachtgever levert ondergrondse afvalcontainers en allerlei (software) diensten daarbij om het beheer en het gebruik zo veel mogelijk te ondersteunen. Een derde partij was bezig om met Ember een nieuw portaal te bouwen naar aanleiding van de functionaliteit van de oude.",
                "## Taken",
                "Het portaal is voornamelijk een invoersysteem, naar aanleiding waarvan de gegevens worden uitgewisseld met de systemen in de containers. Deze systemen sturen metingen (vulling) en gebruiksgegevens op. Men wil naar aanleiding van de historische metingen de klant ondersteunen door te voorspellen wanneer een container geleegd moet gaan worden. Op basis van deze voorspellingen moeten routes worden gepland en gevisualiseerd.",
                "## Aanpak",
                "Omdat het portaal nog niet opgeleverd was ben ik begonnen met het analyseren van de gegevens in de database en het opbouwen van een business intelligence database en een ETL proces voor het berekenen van de voorspellingen. Na de oplevering van het portaal heb ik een dashboard ingebouwd voor het tonen van de voorspellingen in grafieken, naar aanleiding waarvan routes aangemaakt konden worden. Door middel van een maatwerk route optimalisatie systeem met OpenStreetMaps werden routes bepaald die in het portaal getoond werden in een Leaflet plugin. Deze routes konden worden geëxporteerd voor gebruik in andere systemen.",
                "## Resultaat",
                "Met name het dashboard met de voorspellingen en het automatisch selecteren van containers voor leging was een functie die veel enthousiasme opriep bij opdrachtgever en klanten. Een toekomstig project zal de geplande routes integreren in de navigatiesystemen van de vrachtwagens."            ],
            "settings": {
                "nextButtonText": "Ouder",
                "previousButtonText": "Nieuwer",
                "categoryIndexes": {
                    "experience": 8
                }
            }
        },
        {
            "id": "teambuilding-app",
            "title": "Teambuilding app",
            "tags": ["C#.NET","ASP.NET","SQL Server","ModelFirst EntityFramework","MVC","Sencha Touch","JavaScript","FabricJs","PhoneGap","CSS","SASS","HTML5","Windows Azure"],
            "content": [
                "Oktober 2014 tot december 2018 - Een app voor de Apple en Android tablets en desktop browsers voor het verbeteren van samenwerking binnen teams. De basis voor de app is Sencha Touch in combinatie met PhoneGap Build en grafische rendering op een HTML5 canvas. Voor de backend wordt in .NET een web role gemaakt met MVC4 die draait onder Windows Azure.",
                "--readmore--",
                "Tags:<br/>",
                "C#.NET - ASP.NET - SQL Server - ModelFirst EntityFramework - MVC - Sencha Touch - JavaScript - FabricJs - PhoneGap - CSS - SASS - HTML5 - Windows Azure",
                "## Situatie",
                "De opdrachtgever verleent diensten bij het verbeteren van samenwerking binnen teams en wil dit laten ondersteunen door middel van een app. Hij heeft hiervoor een uitgebreid model opgesteld dat zich richt op gedrag, feedback en transparantie binnen het team. Er is een uitgebreid functioneel ontwerp opgesteld.",
                "## Taken",
                "Het opstellen van een uitgebreide planning en urenschatting om aan te geven of de app gerealiseerd kon worden binnen het budget. Vervolgens het compleet bouwen van de applicatie, dus het bouwen van de Sencha app, het renderen van een dashboard met FabricJs, het uitwerken van de integratie met PhoneGap voor de interactie met telefoons en tablets, en het verzorgen van de volledige Azure backend inclusief database, document generatie, e-mailing en een synchronisatie mechanisme tussen de server en de clients.",
                "## Aanpak",
                "Omdat de opdrachtgever al meerdere slechte ervaringen had met aannemers die met dit project waren gestart, was het belangrijk zo transparant mogelijk te zijn in planning en uitvoering, en de opdrachtgever zo goed mogelijk op de hoogte te houden van de voortgang. Hiervoor heb ik met verschillende hulpmiddelen gezorgd. Specifiek voor de rapportage heb ik een concept uitgewerkt op basis van MigraDocs omdat de ondersteuning van Microsoft Reporting Services binnen Azure is stopgezet.",
                "## Resultaat",
                "Op het moment van schrijven is de app in gebruik voor verschillende grote organisaties. Met een enkele code base wordt zowel een web versie als een PhoneGap versie ondersteund welke zijn te downloaden uit Google Play en de Apple AppStore. Mede door de nauwe interactie met de opdrachtgever is in korte tijd enorm veel gerealiseerd."            ],
            "settings": {
                "nextButtonText": "Ouder",
                "previousButtonText": "Nieuwer",
                "categoryIndexes": {
                    "experience": 9
                }
            }
        },
        {
            "id": "diverse-apps",
            "title": "Diverse Apps",
            "tags": ["C#.NET","ASP.NET","SQL Server","CodeFirst EntityFramework","MVC","ServiceBus","Sencha Touch","Sencha ExtJS","JavaScript","CSS","Single Page Application","JsDuck","TFS"],
            "content": [
                "Maart 2013 tot maart 2015 - Diverse apps voor iPhone, iPad en desktop browsers voor het optimaliseren van diverse processen. Ontwikkeld in Sencha Touch voor de iPhone en iPad en in Sencha ExtJS voor desktop browsers, met een .NET MVC server kant.",
                "--readmore--",
                "Tags:<br/>",
                "C#.NET - ASP.NET - SQL Server - CodeFirst EntityFramework - MVC - ServiceBus - Sencha Touch - Sencha ExtJS - JavaScript - CSS - Single Page Application - JsDuck - TFS",
                "## Situatie",
                "De opdrachtgever is bezig om een aantal zeer inefficinte processen te automatiseren en te optimaliseren door met diverse apps de werkprocessen te normaliseren. De problemen die zich voordoen zijn bijvoorbeeld het onjuist opnemen en verwerken van offertes, het niet of onjuist verwerken van op ad-hoc basis uit te voeren of uitgevoerde werkzaamheden waardoor deze niet gefactureerd (kunnen) worden.",
                "## Taken",
                "Mijn taken omvatten het technisch ontwerpen en implementeren van apps en de achterliggende MVC controllers, business logica en data laag. Verder het doen van aanpassingen aan en aanvullingen op bestaande ServiceBus systemen en het inschatten en implementeren van RFC's in alle lagen van de architectuur. Met name de problemen die ontstaan bij het gebruik van de Sencha platforms in onze specifieke situatie leveren hoofdbrekens op.",
                "## Aanpak",
                "De apps worden gebouwd met een Sencha voorkant, waarbij in de browser, in JavaScript, een complete MVC architectuur wordt gebouwd in een Single Page Application. De data wordt uitgewisseld met de server middels ASP.NET MVC controllers, waarbij dus enkel Views en Controllers worden gebruikt. De standaard lagen architectuur wordt uitgebreid met een ServiceBus die de communicatie met andere applicaties faciliteert.",
                "Een rol die ik specifiek heb ingevuld in het team is die van Sencha deskundige; ik schreef code voor het oplossen van bugs in de Sencha code (overrides) en hielp problemen, die samenhingen met de specifieke toepassing van de platforms, op te lossen door te debuggen in de Sencha code zelf. Verder heb ik een framework gebouwd voor het normaliseren van over de apps gedeelde logica.",
                "## Resultaat",
                "Ten tijde van het schrijven van dit verslag zijn er al enige apps ontwikkeld die met toenemende kwaliteit worden gerealiseerd doordat ontwikkelaars sterk afhankelijk zijn van de opgedane ervaring met de Sencha platforms. Door het toenemende inzicht zijn de ontwikkelingen tevens steeds beter te plannen. Ook de werking en architectuur van de 'achterkant' is goed en leent zich goed voor analyse. De geleverde kwaliteit is goed."                
            ],
            "settings": {
                "nextButtonText": "Ouder",
                "previousButtonText": "Nieuwer",
                "categoryIndexes": {
                    "experience": 10
                }
            }
        }
    ]
}